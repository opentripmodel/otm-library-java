package otm.model.entities;

import java.time.LocalDateTime;
import java.util.List;

/**
 * An abstract base class, used as a basis for many of the OTM entities
 */
public abstract class OtmEntity {

    /**
     * Uniquely identifies this entity. A URI can be assigned by the client or will be generated by
     * the server if the client doesn't provide it. Once assigned, the URI can't be changed.
     */
    private String id;

    /**
     * Name of the entity.
     * For display purposes and search only.
     */
    private String name;

    /**
     * External attributes are a simple way to add information in an OpenTripModel message that could not
     * fit into one of the OTM fields otherwise. The externalAttributes member is meant for additional metadata
     * and/or additional ID of an entity. This can also help to identify an OTM entity in a system by the ID
     * of that system.
     */
    private ExternalAttributes externalAttributes;

    /**
     * The creation date of this entity
     */
    private LocalDateTime creationDate;

    /**
     * The last modified date of this entity. If none is given, the creation date is used instead.
     */
    private LocalDateTime lastModified;

    /**
     * The context events provide some optional information about the events that can provide
     * additional information on the current state of this entity.
     *
     * For example, your system might send ETA information for the arrival of a vehicle on a location.
     * To make it clear what caused this ETA to be updated, we can include some information about what
     * caused this ETA update by including an event as context. If your ETA update was caused by a
     * location update, this event can be included as context. If the ETA was caused by a traffic accident
     * on the route of the vehicle, you can include that event in the context.
     */
    private List<Event> contextEvents;

    /**
     * @return String, The id of the current entity
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the unique identifier of the entity.
     *
     * @param id The identifier to set.
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Gets the name of the entity.
     *
     * @return The name of the entity.
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the name of the entity.
     *
     * @param name The name to set.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Gets the external attributes of the entity.
     *
     * @return The external attributes.
     */
    public ExternalAttributes getExternalAttributes() {
        return externalAttributes;
    }

    /**
     * Sets the external attributes of the entity.
     *
     * @param externalAttributes The external attributes to set.
     */
    public void setExternalAttributes(ExternalAttributes externalAttributes) {
        this.externalAttributes = externalAttributes;
    }

    /**
     * Gets the creation date of the entity.
     *
     * @return The creation date.
     */
    public LocalDateTime getCreationDate() {
        return creationDate;
    }

    /**
     * Sets the creation date of the entity.
     *
     * @param creationDate The creation date to set.
     */
    public void setCreationDate(LocalDateTime creationDate) {
        this.creationDate = creationDate;
    }

    /**
     * Gets the last modified date of the entity.
     *
     * @return The last modified date.
     */
    public LocalDateTime getLastModified() {
        return lastModified;
    }

    /**
     * Sets the last modified date of the entity.
     *
     * @param lastModified The last modified date to set.
     */
    public void setLastModified(LocalDateTime lastModified) {
        this.lastModified = lastModified;
    }

    /**
     *
     * @return The context events.
     */
    public List<Event> getEvents(){
        return contextEvents;
    }

    /**
     * Sets the context events.
     * @param events The context events to set.
     */
    public void setEvents(List<Event> events){
        this.contextEvents = events;
    }

    @Override
    public String toString() {
        return "OtmEntity{" +
                "id='" + id + '\'' +
                ", name='" + name + '\'' +
                ", externalAttributes=" + externalAttributes +
                ", creationDate=" + creationDate +
                ", lastModified=" + lastModified +
                ", contextEvents=" + contextEvents +
                '}';
    }
}